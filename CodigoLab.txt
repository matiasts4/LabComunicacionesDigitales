Actividad Previa: 
1.Generar la señal sinusoidal

clc; clear; close all;

% Parámetros
fm = 100000; % Frecuencia de muestreo muy alta (100 kHz)
tm = 1/fm; % Período de muestreo (intervalo entre muestras)
ls = 200; % Número de muestras de la señal

f_c = 1000; % Frecuencia de la señal senoidal (1 kHz)
f_s = 5000; % Frecuencia de muestreo (5 kHz)

ts = 1/f_s; % Período de muestreo (intervalo entre muestras del muestreo)
tau = 0.5 * ts; % Duración del pulso (mitad del período de muestreo)
d = tau / ts; % Ciclo de trabajo (50%)

% Vector de tiempo
t = (0:ls-1) * tm;

% Generar señal sinusoidal
m_t = sin(2*pi*f_c*t);

% Graficar señal original
figure;
plot(t, m_t, 'b'); 
title('Señal Original');
xlabel('Tiempo (s)'); ylabel('Amplitud');
grid on;

2.Modulación PAM con Muestreo Natural

% Muestreo natural: Se multiplica la señal por un tren de pulsos de ancho tau
n = 0:ls-1;
train_pulses = (mod(n, fm/f_s) < (fm/f_s * d));
pam_natural = m_t .* train_pulses;

% Graficar
figure;
stem(t, pam_natural, 'r'); 
title('Modulación PAM con Muestreo Natural');
xlabel('Tiempo (s)'); ylabel('Amplitud');
grid on;

3. Modulación PAM con Muestreo Instantáneo

% Muestreo instantáneo: Solo se toman valores en los instantes de muestreo
pam_inst = m_t .* (mod(n, fm/f_s) == 0);

% Graficar
figure;
stem(t, pam_inst, 'g'); 
title('Modulación PAM con Muestreo Instantáneo');
xlabel('Tiempo (s)'); ylabel('Amplitud');
grid on;


4. Graficar Todo en una Misma Figura
figure;
subplot(3,1,1);
plot(t, m_t, 'b'); 
title('Señal Original');
xlabel('Tiempo (s)'); ylabel('Amplitud');

subplot(3,1,2);
stem(t, pam_natural, 'r'); 
title('Modulación PAM Natural');
xlabel('Tiempo (s)'); ylabel('Amplitud');

subplot(3,1,3);
stem(t, pam_inst, 'g'); 
title('Modulación PAM Instantánea');
xlabel('Tiempo (s)'); ylabel('Amplitud');

sgtitle('Comparación de la Modulación PAM');





Actividad de laboratorio: 
1.
% Cálculo de la Transformada de Fourier
NFFT = 2^nextpow2(length(m_t)); % Tamaño óptimo para FFT
f = fm*(0:(NFFT/2)-1)/NFFT; % Vector de frecuencias positivas

M_f = abs(fft(m_t, NFFT)); % FFT de la señal original
PAM_natural_f = abs(fft(pam_natural, NFFT)); % FFT de PAM Natural
PAM_inst_f = abs(fft(pam_inst, NFFT)); % FFT de PAM Instantáneo

% Graficar espectros
figure;
subplot(3,1,1);
plot(f, M_f(1:NFFT/2), 'b');
title('Espectro de la Señal Original');
xlabel('Frecuencia (Hz)'); ylabel('Amplitud');

subplot(3,1,2);
plot(f, PAM_natural_f(1:NFFT/2), 'r');
title('Espectro de PAM Natural');
xlabel('Frecuencia (Hz)'); ylabel('Amplitud');

subplot(3,1,3);
plot(f, PAM_inst_f(1:NFFT/2), 'g');
title('Espectro de PAM Instantáneo');
xlabel('Frecuencia (Hz)'); ylabel('Amplitud');

sgtitle('Transformadas de Fourier de las Señales');



2.
% Parámetros PCM
N = 4; % Número de bits por muestra (ajustable)
niveles = 2^N; % Cantidad de niveles de cuantización

% Cuantización uniforme
min_val = min(pam_inst);
max_val = max(pam_inst);
delta = (max_val - min_val) / niveles; % Paso de cuantización

pam_quantized = round((pam_inst - min_val) / delta) * delta + min_val; % Cuantización

% Graficar señales cuantizadas
figure;
subplot(3,1,1);
plot(t, m_t, 'b'); 
title('Señal Original');
xlabel('Tiempo (s)'); ylabel('Amplitud');

subplot(3,1,2);
stem(t, pam_inst, 'g'); 
title('PAM Muestreada Instantáneamente');
xlabel('Tiempo (s)'); ylabel('Amplitud');

subplot(3,1,3);
stem(t, pam_quantized, 'm'); 
title('Señal PAM Cuantizada (PCM)');
xlabel('Tiempo (s)'); ylabel('Amplitud');

sgtitle('Modulación PCM');
 

error_cuantizacion = pam_inst - pam_quantized;

% Graficar error de cuantización
figure;
stem(t, error_cuantizacion, 'k');
title('Error de Cuantización');
xlabel('Tiempo (s)'); ylabel('Error');
grid on;